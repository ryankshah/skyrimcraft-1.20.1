public net.minecraft.world.level.block.entity.BlockEntityType$BlockEntitySupplier
public net.minecraft.world.entity.Mob goalSelector # goalSelector
public net.minecraft.world.entity.Mob targetSelector # targetSelector
public net.minecraft.client.renderer.RenderType create(Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;ILnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; # create
public net.minecraft.client.renderer.RenderType create(Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; # create
public net.minecraft.tags.ItemTags bind(Ljava/lang/String;)Lnet/minecraft/tags/TagKey; # bind
public net.minecraft.tags.BlockTags create(Ljava/lang/String;)Lnet/minecraft/tags/TagKey; # create
public net.minecraft.world.entity.SpawnPlacements register(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/entity/SpawnPlacements$SpawnPredicate;)V # register
public net.minecraft.client.renderer.item.ItemProperties register(Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)V # register
public net.minecraft.world.level.block.state.properties.BlockSetType register(Lnet/minecraft/world/level/block/state/properties/BlockSetType;)Lnet/minecraft/world/level/block/state/properties/BlockSetType; # register
public net.minecraft.world.level.block.TrapDoorBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/world/level/block/state/properties/BlockSetType;)V # <init>
public net.minecraft.world.level.block.TorchBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/core/particles/ParticleOptions;)V # <init>
public net.minecraft.world.level.block.RepeaterBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.RedstoneTorchBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.WallTorchBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lnet/minecraft/core/particles/ParticleOptions;)V # <init>
public net.minecraft.world.level.block.RedstoneWallTorchBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.data.models.model.TextureSlot create(Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureSlot; # create
public net.minecraft.advancements.CriteriaTriggers CRITERIA # CRITERIA
public net.minecraft.advancements.CriteriaTriggers register(Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; # register
public net.minecraft.client.renderer.LevelRenderer capturedFrustum # capturedFrustum
public net.minecraft.client.renderer.LevelRenderer cullingFrustum # cullingFrustum
public net.minecraft.client.renderer.GameRenderer getFov(Lnet/minecraft/client/Camera;FZ)D # getFov
public net.minecraft.world.inventory.MenuType <init>(Lnet/minecraft/world/inventory/MenuType$MenuSupplier;Lnet/minecraft/world/flag/FeatureFlagSet;)V # <init>
public net.minecraft.client.gui.screens.MenuScreens register(Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V # register
public net.minecraft.world.item.enchantment.EnchantmentCategory <init>(Ljava/lang/String;I)V # <init>
public net.minecraft.client.multiplayer.ClientChunkCache storage # storage
public net.minecraft.client.multiplayer.ClientChunkCache$Storage <init>(Lnet/minecraft/client/multiplayer/ClientChunkCache;I)V # <init>
public net.minecraft.client.multiplayer.ClientChunkCache$Storage inRange(II)Z # inRange
public net.minecraft.client.multiplayer.ClientChunkCache$Storage getIndex(II)I # getIndex
public net.minecraft.client.multiplayer.ClientChunkCache$Storage getChunk(I)Lnet/minecraft/world/level/chunk/LevelChunk; # getChunk
public net.minecraft.client.multiplayer.ClientChunkCache isValidChunk(Lnet/minecraft/world/level/chunk/LevelChunk;II)Z # isValidChunk
public net.minecraft.world.inventory.MenuType$MenuSupplier